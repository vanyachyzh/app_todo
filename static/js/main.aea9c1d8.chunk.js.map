{"version":3,"sources":["types/index.ts","types/Filter.ts","types/ErrorType.ts","types/KeyType.ts","utils/fetchClient.ts","api/users.ts","components/Auth/AuthForm.tsx","components/Auth/AuthContext.tsx","utils/filterTodos.ts","components/Header/Header.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","api/todos.ts","components/Footer/Footer.tsx","components/TodoNotification/TodoNotifictiion.tsx","App.tsx","index.tsx"],"names":["Filter","ErrorType","KeyType","BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","data","options","body","JSON","stringify","headers","then","fetch","response","ok","Error","json","client","getUserByEmail","email","a","users","createUser","name","AuthForm","onLogin","useState","setEmail","setName","needToRegister","setNeedToRegister","loading","setLoading","errorMessage","setErrorMessage","saveUser","user","useEffect","userData","localStorage","getItem","parse","error","loadUser","handleSubmit","event","preventDefault","onSubmit","className","htmlFor","classNames","type","id","placeholder","disabled","value","required","onChange","e","target","minLength","AuthContext","React","createContext","AuthProvider","children","setUser","Provider","countActiveTodos","todos","filter","todo","completed","length","checkCompletedTodos","some","Header","addTodo","tempTodo","toggleCompletedStatus","setValue","active","onClick","TodoItem","removeTodo","removedTodoId","updateTodo","isLoadingAll","title","placeHolder","setPlaceHolder","isReadOnly","setIsReadOnly","isEscape","isChanged","looseFocus","currentTarget","blur","changeTitle","checked","onDoubleClick","focus","setFocus","readOnly","onKeyDown","key","Enter","Escape","onBlur","hidden","TodoList","map","defaultValue","links","deleteTodo","todoId","patchTodo","Footer","setFilter","removeCompletedTodos","changeFilter","filterType","textContent","link","to","toLowerCase","selected","TodoNotification","setError","errorText","isVisible","setIsVisible","deleteNotifacation","state","None","initialError","App","useContext","newUserId","setTodos","setTempTodo","All","setFilterType","setRemovedTodoId","isLoading","setIsLoading","initialStatus","every","completedStatus","setCompletedStatus","filteredTodos","useMemo","filterParam","visibleTodos","Active","Completed","filterTodos","serverTodos","Update","userId","prev","finally","EmptyTitle","updatedPromises","all","currentTodo","catch","Delete","updatedTodos","findIndex","uncompleted","removePromises","ReactDOM","render","document","getElementById"],"mappings":"wJAAA,wmB,+BCCO,IAAKA,EADZ,kC,SACYA,K,UAAAA,E,sBAAAA,E,iBAAAA,M,yDCAL,IAAKC,EADZ,kC,SACYA,K,kCAAAA,E,iCAAAA,E,2BAAAA,E,iCAAAA,E,aAAAA,M,mFCAL,IAAKC,EADZ,kC,SACYA,K,cAAAA,E,iBAAAA,M,mNCANC,EAAW,oCAGjB,SAASC,EAAKC,GACZ,OAAO,IAAIC,SAAQ,SAAAC,GACjBC,WAAWD,EAASF,MAOxB,SAASI,EACPC,GAGa,IAFbC,EAEY,uDAFY,MACxBC,EACY,uDADA,KAENC,EAAuB,CAAEF,UAW/B,OATIC,IAEFC,EAAQC,KAAOC,KAAKC,UAAUJ,GAC9BC,EAAQI,QAAU,CAChB,eAAgB,oCAKbb,EAAK,KACTc,MAAK,kBAAMC,MAAMhB,EAAWO,EAAKG,MACjCK,MAAK,SAAAE,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAGZ,OAAOF,EAASG,UAIf,IAAMC,EACN,SAAId,GAAJ,OAAoBD,EAAWC,IADzBc,EAEL,SAAId,EAAaE,GAAjB,OAA+BH,EAAWC,EAAK,OAAQE,IAFlDY,EAGJ,SAAId,EAAaE,GAAjB,OAA+BH,EAAWC,EAAK,QAASE,IAHpDY,EAIH,SAACd,GAAD,OAAiBD,EAAQC,EAAK,WCzC3Be,EAAc,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACRH,EAAA,uBAAmCE,IAD3B,cACtBE,EADsB,yBAGrBA,EAAM,IAAM,MAHS,2CAAH,sDAQdC,EAAU,uCAAG,+BAAAF,EAAA,6DAASD,EAAT,EAASA,MAAOI,EAAhB,EAAgBA,KAAhB,kBACjBN,EAAkB,SAAU,CAAEE,QAAOI,UADpB,2CAAH,sD,OCDVC,EAA4B,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC1C,EAA0BC,mBAAS,IAAnC,mBAAOP,EAAP,KAAcQ,EAAd,KACA,EAAwBD,mBAAS,IAAjC,mBAAOH,EAAP,KAAaK,EAAb,KACA,EAA4CF,oBAAS,GAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwCN,mBAAS,IAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAEMC,EAAW,SAACC,GAChBX,EAAQW,IAGVC,qBAAU,WACR,IAAMC,EAAWC,aAAaC,QAAQ,QAEtC,GAAKF,EAIL,IACE,IAAMF,EAAO5B,KAAKiC,MAAMH,GAExBb,EAAQW,GACR,MAAOM,OAGR,IAEH,IAAMC,EAAQ,uCAAG,4BAAAvB,EAAA,sEACIF,EAAeC,GADnB,QACTiB,EADS,QAIbD,EAASC,GAETN,GAAkB,GANL,2CAAH,qDAeRc,EAAY,uCAAG,WAAOC,GAAP,SAAAzB,EAAA,yDACnByB,EAAMC,iBAENZ,EAAgB,IAChBF,GAAW,GAJQ,UAObH,EAPa,gCAJZP,EAAW,CAAEC,OAAMJ,UACvBR,KAAKwB,GAGW,+CAUTQ,IAVS,0DAajBT,EAAgB,yBAbC,yBAejBF,GAAW,GAfM,6EAAH,sDAmBlB,OACE,uBAAMe,SAAUH,EAAcI,UAAU,WAAxC,UACE,oBAAIA,UAAU,aAAd,SACGnB,EAAiB,uBAAyB,yBAG7C,sBAAKmB,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQC,QAAQ,aAAjC,mBAIA,sBACED,UAAWE,IAAW,yBAA0B,CAC9C,aAAcnB,IAFlB,UAKE,uBACEoB,KAAK,QACLC,GAAG,aACHJ,UAAWE,IAAW,QAAS,CAC7B,aAAcrB,GAAkBI,IAElCoB,YAAY,mBACZC,SAAUvB,GAAWF,EACrB0B,MAAOpC,EACPqC,UAAQ,EACRC,SAAU,SAAAC,GAAC,OAAI/B,EAAS+B,EAAEC,OAAOJ,UAGnC,sBAAMP,UAAU,wBAAhB,SACE,mBAAGA,UAAU,0BAIfnB,GAAkBI,GAClB,mBAAGe,UAAU,iBAAb,SAA+Bf,OAIlCJ,GACC,sBAAKmB,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQC,QAAQ,YAAjC,uBAIA,sBACED,UAAWE,IAAW,yBAA0B,CAC9C,aAAcnB,IAFlB,UAKE,uBACEoB,KAAK,OACLC,GAAG,YACHJ,UAAWE,IAAW,QAAS,CAC7B,YAAarB,GAAkBI,IAEjCoB,YAAY,kBACZG,UAAQ,EACRI,UAAW,EACXN,SAAUvB,EACVwB,MAAOhC,EACPkC,SAAU,SAAAC,GAAC,OAAI9B,EAAQ8B,EAAEC,OAAOJ,UAGlC,sBAAMP,UAAU,wBAAhB,SACE,mBAAGA,UAAU,qBAIhBnB,GAAkBI,GACjB,mBAAGe,UAAU,iBAAb,SAA+Bf,OAKrC,qBAAKe,UAAU,QAAf,SACE,wBACEG,KAAK,SACLH,UAAWE,IAAW,oBAAqB,CACzC,aAAcnB,IAHlB,SAMGF,EAAiB,WAAa,gBCrJ5BgC,EAAcC,IAAMC,cAA2B,MAM/CC,EAAgC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC9C,EAAwBvC,mBAAsB,MAA9C,mBAAOU,EAAP,KAAa8B,EAAb,KAEA,OAAK9B,EAKH,cAACyB,EAAYM,SAAb,CAAsBZ,MAAOnB,EAA7B,SACG6B,IALI,cAAC,EAAD,CAAUxC,QAASyC,K,wCCOjBE,EAAmB,SAACC,GAG/B,OAFoBA,EAAMC,QAAO,SAAAC,GAAI,OAAKA,EAAKC,aAE5BC,QAGRC,EAAsB,SAACL,GAClC,OAAOA,EAAMM,MAAK,SAAAJ,GAAI,OAAIA,EAAKC,cCfpBI,EAA0B,SAAC,GAKjC,IAJLC,EAII,EAJJA,QACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,sBACAV,EACI,EADJA,MAEA,EAA0B3C,mBAAS,IAAnC,mBAAO6B,EAAP,KAAcyB,EAAd,KAWA,OACE,yBAAQhC,UAAU,kBAAlB,UACE,wBACEG,KAAK,SACLH,UAAWE,IACT,sBACA,CAAE+B,QAASb,EAAiBC,KAE9Ba,QAASH,IAEX,sBAAMhC,SAhBO,SAACF,GAChBA,EAAMC,iBACN+B,EAAQtB,GACRyB,EAAS,KAaP,SACE,uBACE1B,WAAYwB,EACZvD,KAAK,QACLgC,MAAOA,EACPE,SAzBY,SAACZ,GACnBmC,EAASnC,EAAMc,OAAOJ,QAyBhBJ,KAAK,OACLH,UAAU,oBACVK,YAAY,iC,OCnCT8B,EAA4B,SAAC,GAMnC,IALLZ,EAKI,EALJA,KACAa,EAII,EAJJA,WACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,WACAC,EACI,EADJA,aAEQnC,EAAyBmB,EAAzBnB,GAAIoC,EAAqBjB,EAArBiB,MAAOhB,EAAcD,EAAdC,UACnB,EAAsC9C,mBAAS8D,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA0BhE,mBAAS,IAAnC,mBAAO6B,EAAP,KAAcyB,EAAd,KACA,EAAoCtD,oBAAS,GAA7C,mBAAOiE,EAAP,KAAmBC,EAAnB,KACIC,GAAW,EACTC,EAAYL,IAAgBlC,EAM5BwC,EAAa,SACjBlD,GAGA+C,GAAc,GACdZ,EAAS,IACTnC,EAAMmD,cAAcC,QAShBC,EAAc,SAClBrD,GAGAyC,EAAWlC,EAAI,CAAEoC,MAAO3C,EAAMmD,cAAczC,QAC5CmC,EAAe7C,EAAMmD,cAAczC,OACnCwC,EAAWlD,IAmDb,OACE,qBACEG,UAAWE,IACT,OACA,CAAEsB,cAHN,UAME,uBAAOxB,UAAU,qBAAjB,SACE,uBACEG,KAAK,WACLH,UAAU,eACVmD,QAAS3B,EACTf,SAAU,WACR6B,EAAWlC,EAAI,CAAEoB,WAAYA,SAInC,uBACErB,KAAK,OACLE,YAAaoC,EACblC,MAAOA,EACPE,SAjGW,SAACZ,GAChBmC,EAASnC,EAAMc,OAAOJ,QAiGlB6C,cAtEgB,SAACvD,IAfN,SAACA,GAChB+C,GAAc,GACdZ,EAASS,GACT5C,EAAMmD,cAAcK,QAapBC,CAASzD,IAsELG,UAAWE,IACT,cACA,CAAE,2BAA4ByC,IAEhCY,SAAUZ,EACVa,UAhDY,SAAC3D,GACbA,EAAM4D,MAAQ9G,UAAQ+G,OAAUnD,GAClC6B,EAAWhC,GAGTP,EAAM4D,MAAQ9G,UAAQ+G,QAAUZ,GAAavC,GAC/CwC,EAAWlD,GAGTA,EAAM4D,MAAQ9G,UAAQ+G,OAASZ,GAAavC,GAC9C2C,EAAYrD,GAGVA,EAAM4D,MAAQ9G,UAAQgH,SACxBd,GAAW,EACXhD,EAAMmD,cAAcC,OACpBJ,GAAW,IAiCTe,OAzES,SAAC/D,GACVgD,EACFE,EAAWlD,GAKRU,EAMAuC,EAMDA,GACFI,EAAYrD,GANZkD,EAAWlD,GANXuC,EAAWhC,MAmEX,wBACED,KAAK,SACLH,UAAU,eACVkC,QAAS,kBAAME,EAAWhC,IAC1ByD,QAASlB,EAJX,mBASEN,IAAkBjC,GAAMmC,IACxB,sBAAKvC,UAAU,UAAf,UACE,qBAAKA,UAAU,8CACf,qBAAKA,UAAU,kBCpIZ8D,EAA4B,SAAC,GAAD,IACvCzC,EADuC,EACvCA,MACAS,EAFuC,EAEvCA,SACAM,EAHuC,EAGvCA,WACAC,EAJuC,EAIvCA,cACAC,EALuC,EAKvCA,WACAC,EANuC,EAMvCA,aANuC,OAQvC,qBAAIvC,UAAU,gBAAd,UACGqB,EAAM0C,KAAI,SAAAxC,GAAI,OACb,cAAC,EAAD,CAEEA,KAAMA,EACNa,WAAYA,EACZC,cAAeA,EACfC,WAAYA,EACZC,aAAcA,GALThB,EAAKnB,OAQb0B,GACC,sBAAK9B,UAAU,OAAf,UACE,uBAAOA,UAAU,qBAAjB,SACE,uBAAOG,KAAK,WAAWH,UAAU,mBAEnC,uBACEgE,aAAclC,EAASU,MACvBxC,UAAU,cACVM,UAAQ,IAEV,wBAAQH,KAAK,SAASH,UAAU,eAAhC,kBAEA,sBAAKA,UAAU,UAAf,UACE,qBAAKA,UAAU,8CACf,qBAAKA,UAAU,qBC1CZiE,EAAQ,CAAC,MAAO,SAAU,aAW1BC,EAAa,SAACC,GACzB,OAAOlG,EAAA,iBAAwBkG,KAGpBC,EAAY,SACvBD,EACA9G,GAEA,OAAOY,EAAA,iBAAuBkG,GAAU9G,ICV7BgH,EAA0B,SAAC,GAKjC,IAJLhD,EAII,EAJJA,MACAiD,EAGI,EAHJA,UACAhD,EAEI,EAFJA,OACAiD,EACI,EADJA,qBAEMC,EAAe,SAAC3E,GACpB,IAAM4E,EAAa5E,EAAMmD,cAAc0B,YAEnCD,GACFH,EAAU7H,SAAOgI,KAIrB,OACE,yBAAQzE,UAAU,kBAAlB,UACE,sBAAMA,UAAU,aAAhB,mBACMoB,EAAiBC,GADvB,iBAIA,qBAAKrB,UAAU,SAAf,SACGiE,EAAMF,KAAI,SAAAY,GAAI,OACb,cAAC,IAAD,CAEEC,GAAa,QAATD,EAAiB,MAAjB,aAA+BA,EAAKE,eACxC7E,UAAWE,IACT,eACA,CACE4E,SAAUH,IAASrD,IAGvBY,QAASsC,EATX,SAWGG,GAVIA,QAeX,wBACExE,KAAK,SACLH,UAAWE,IACT,2BACA,CAAE,qCAAsCwB,EAAoBL,KAE9Da,QAASqC,EANX,iCC1COQ,EAAoC,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UAC5D,EAAkCvG,oBAAS,GAA3C,mBAAOwG,EAAP,KAAkBC,EAAlB,KAEMC,EAAqB,WACzBD,GAAa,GACblI,YAAW,WACT+H,EAAS,CACPK,OAAO,EACPlF,KAAMzD,YAAU4I,SAEjB,MASL,OANAjG,qBAAU,WACRpC,YAAW,WACTmI,MACC,OACF,IAGD,sBACEpF,UAAWE,IACT,eACA,YACA,WACA,yBACA,CAAE2D,QAASqB,IANf,UASE,wBACE/E,KAAK,SACLH,UAAU,SACVkC,QAASkD,IAEVH,MChCDM,EAAsB,CAC1BF,OAAO,EACPlF,KAAMzD,YAAU4I,MAGLE,EAAgB,WAC3B,IAAMpG,EAAOqG,qBAAW5E,GAClB6E,GAAgB,OAAJtG,QAAI,IAAJA,OAAA,EAAAA,EAAMgB,KAAM,EAC9B,EAA0B1B,mBAAiB,IAA3C,mBAAO2C,EAAP,KAAcsE,EAAd,KACA,EAAgCjH,mBAAsB,MAAtD,mBAAOoD,EAAP,KAAiB8D,EAAjB,KACA,EAAoClH,mBAASjC,SAAOoJ,KAApD,mBAAOpB,EAAP,KAAmBqB,EAAnB,KACA,EAA0BpH,mBAAS6G,GAAnC,mBAAO7F,EAAP,KAAcsF,EAAd,KACA,EAA0CtG,mBAAwB,MAAlE,mBAAO2D,EAAP,KAAsB0D,EAAtB,KACA,EAAkCrH,oBAAS,GAA3C,mBAAOsH,EAAP,KAAkBC,EAAlB,KACMC,EAAgB7E,EAAM8E,OAAM,SAAA5E,GAAI,OAAIA,EAAKC,aAC/C,EAA8C9C,mBAASwH,GAAvD,mBAAOE,EAAP,KAAwBC,EAAxB,KACMC,EAAgBC,mBAAQ,WAC5B,OP1BuB,SACzBlF,EACAmF,GAEA,IAAMC,EAAY,YAAOpF,GAEzB,OAAQmF,GACN,KAAK/J,IAAOiK,OACV,OAAOD,EAAanF,QAAO,SAAAC,GAAI,OAAKA,EAAKC,aAC3C,KAAK/E,IAAOkK,UACV,OAAOF,EAAanF,QAAO,SAAAC,GAAI,OAAIA,EAAKC,aAC1C,KAAK/E,IAAOoJ,IAEZ,QACE,OAAOY,GOYFG,CAAYvF,EAAOoD,KACzB,CAACpD,EAAOoD,IAGXpF,qBAAU,WACR,KACmB,uCAAG,4BAAAjB,EAAA,sEH3BjBH,EAAA,wBG4B+ByH,IADd,cACZ7H,EADY,yBAGXA,GAHW,2CAAH,qDAMjBgJ,GACGlJ,MAAK,SAAAE,GAAQ,OAAI8H,EAAS9H,MAC7B,SACAmH,EAAS,CACPK,OAAO,EACPlF,KAAMzD,YAAUoK,YAInB,IAwGH,OAAI,OAAC1H,QAAD,IAACA,OAAD,EAACA,EAAMgB,IAKT,sBAAKJ,UAAU,UAAf,UACE,oBAAIA,UAAU,iBAAd,mBAEA,sBAAKA,UAAU,mBAAf,UACE,cAAC,EAAD,CACEqB,MAAOA,EACPQ,QAjHQ,SAACW,GHzCK,IAACuE,EAAgBxF,EG0ChCiB,GASLoD,EAAY,CACVxF,GAAI,EACJ2G,OAAQrB,EACRlD,QACAhB,WAAW,KHvDQuF,EG0DZrB,EH1D4BnE,EG0DjB,CAClBwF,OAAQrB,EACRlD,QACAhB,WAAW,GH3DRvD,EAAA,wBAA6B8I,GAAUxF,IG4DzC5D,MAAK,SAAAE,GACN8H,GAAS,SAAAqB,GAAI,4BAENA,GAFM,CAGTnJ,UAIHoJ,SAAQ,WACPrB,EAAY,UA5BdZ,EAAS,CACPK,OAAO,EACPlF,KAAMzD,YAAUwK,cA8GdpF,SAAUA,EACVC,sBA3CsB,WAC5BkE,GAAa,GACbI,GAAmB,SAAAW,GAAI,OAAKA,KAE5B,IAAMG,EAAkB9F,EAAM0C,KAAI,SAAAxC,GAChC,OAAO6C,EAAU7C,EAAKnB,GAAI,CAAEoB,UAAW4E,OAGzCrJ,QAAQqK,IAAID,GACTxJ,KAAKgI,GACLsB,SAAQ,WACPhB,GAAa,SAmCZ5E,EAAMI,OAAS,GACd,qCACE,cAAC,EAAD,CACEJ,MAAOiF,EACPxE,SAAUA,EACVM,WAzFO,SAAChC,GAClB2F,EAAiB3F,GACjB8D,EAAW9D,GACRzC,MAAK,WACJgI,EAAStE,EAAMC,QAAO,SAAA+F,GAAW,OAAIA,EAAYjH,KAAOA,SAEzDkH,OAAM,WACLtC,EAAS,CACPK,OAAO,EACPlF,KAAMzD,YAAU6K,YAGnBN,SAAQ,WACPlB,EAAiB,UA6EX1D,cAAeA,EACfC,WA1EO,SAAClC,EAAY/C,GAC9B0I,EAAiB3F,GACjBgE,EAAUhE,EAAI/C,GACXM,MAAK,SAACE,GACL,IAAM2J,EAAY,YAAOnG,GAGzBmG,EAFsB,YAAInG,GAAOoG,WAAU,SAAAlG,GAAI,OAAIA,EAAKnB,KAAOA,MAEjCvC,EAC9B8H,EAAS6B,MAEVF,OAAM,WACLtC,EAAS,CACPK,OAAO,EACPlF,KAAMzD,YAAUoK,YAGnBG,SAAQ,WACPlB,EAAiB,UA0DXxD,aAAcyD,IAEhB,cAAC,EAAD,CACE3E,MAAOA,EACPiD,UAAWwB,EACXxE,OAAQmD,EACRF,qBA7CiB,WAC3B,IAAM/C,EAAYH,EAAMC,QAAO,SAAAC,GAAI,OAAIA,EAAKC,aACtCkG,EAAcrG,EAAMC,QAAO,SAAAC,GAAI,OAAKA,EAAKC,aACzCmG,EAAiBnG,EAAUuC,KAAI,SAAAxC,GAAI,OAAI2C,EAAW3C,EAAKnB,OAE7DrD,QAAQqK,IAAIO,GACThK,MAAK,kBAAMgI,EAAS+B,MACpBJ,OAAM,WACLtC,EAAS,CACPK,OAAO,EACPlF,KAAMzD,YAAU6K,qBAyCnB7H,EAAM2F,OACL,cAAC,EAAD,CACEL,SAAUA,EACVC,UAAWvF,EAAMS,UAtChB,8CC/IXyH,IAASC,OACP,cAAC,EAAD,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.aea9c1d8.chunk.js","sourcesContent":["export * from './Error';\nexport * from './ErrorType';\nexport * from './Filter';\nexport * from './Todo';\nexport * from './FilterValue';\nexport * from './Property';\nexport * from './KeyType';\nexport * from './User';\n","// eslint-disable-next-line no-shadow\nexport enum Filter {\n  All = 'All',\n  Completed = 'Completed',\n  Active = 'Active',\n}\n","// eslint-disable-next-line no-shadow\nexport enum ErrorType {\n  EmptyTitle = 'Title can\\'t be empty',\n  Delete = 'Unable to delete a todo',\n  Add = 'Unable to add a todo',\n  Update = 'Unable to update a todo',\n  None = 'None',\n}\n","// eslint-disable-next-line no-shadow\nexport enum KeyType {\n  Enter = 'Enter',\n  Escape = 'Escape',\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nconst BASE_URL = 'https://mate.academy/students-api';\n\n// returns a promise resolved after a given delay\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\n// To have autocompletion and avoid mistypes\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null, // we can send any data to the server\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    // We add body and Content-Type only for the requests with data\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  // we wait for testing purpose to see loaders\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","import { User } from '../types/User';\nimport { client } from '../utils/fetchClient';\n\nexport const getUserByEmail = async (email: string) => {\n  const users = await client.get<User[]>(`/users?email=${email}`);\n\n  return users[0] || null;\n};\n\ntype UserData = Pick<User, 'name' | 'email'>;\n\nexport const createUser = async ({ email, name }: UserData) => {\n  return client.post<User>('/users', { email, name });\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { createUser, getUserByEmail } from '../../api/users';\nimport { User } from '../../types/User';\n\nexport type Props = {\n  onLogin: (user: User) => void,\n};\n\nexport const AuthForm: React.FC<Props> = ({ onLogin }) => {\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [needToRegister, setNeedToRegister] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const saveUser = (user: User) => {\n    onLogin(user);\n  };\n\n  useEffect(() => {\n    const userData = localStorage.getItem('user');\n\n    if (!userData) {\n      return;\n    }\n\n    try {\n      const user = JSON.parse(userData) as User;\n\n      onLogin(user);\n    } catch (error) {\n      // Need to login\n    }\n  }, []);\n\n  const loadUser = async () => {\n    const user = await getUserByEmail(email);\n\n    if (user) {\n      saveUser(user);\n    } else {\n      setNeedToRegister(true);\n    }\n  };\n\n  const registerUser = () => {\n    return createUser({ name, email })\n      .then(saveUser);\n  };\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setErrorMessage('');\n    setLoading(true);\n\n    try {\n      if (needToRegister) {\n        await registerUser();\n      } else {\n        await loadUser();\n      }\n    } catch (error) {\n      setErrorMessage('Something went wrtong');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"box mt-5\">\n      <h1 className=\"title is-3\">\n        {needToRegister ? 'You need to register' : 'Log in to open todos'}\n      </h1>\n\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"user-email\">\n          Email\n        </label>\n\n        <div\n          className={classNames('control has-icons-left', {\n            'is-loading': loading,\n          })}\n        >\n          <input\n            type=\"email\"\n            id=\"user-email\"\n            className={classNames('input', {\n              'is-danger': !needToRegister && errorMessage,\n            })}\n            placeholder=\"Enter your email\"\n            disabled={loading || needToRegister}\n            value={email}\n            required\n            onChange={e => setEmail(e.target.value)}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-envelope\" />\n          </span>\n        </div>\n\n        {!needToRegister && errorMessage && (\n          <p className=\"help is-danger\">{errorMessage}</p>\n        )}\n      </div>\n\n      {needToRegister && (\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"user-name\">\n            Your Name\n          </label>\n\n          <div\n            className={classNames('control has-icons-left', {\n              'is-loading': loading,\n            })}\n          >\n            <input\n              type=\"text\"\n              id=\"user-name\"\n              className={classNames('input', {\n                'is-danger': needToRegister && errorMessage,\n              })}\n              placeholder=\"Enter your name\"\n              required\n              minLength={4}\n              disabled={loading}\n              value={name}\n              onChange={e => setName(e.target.value)}\n            />\n\n            <span className=\"icon is-small is-left\">\n              <i className=\"fas fa-user\" />\n            </span>\n          </div>\n\n          {needToRegister && errorMessage && (\n            <p className=\"help is-danger\">{errorMessage}</p>\n          )}\n        </div>\n      )}\n\n      <div className=\"field\">\n        <button\n          type=\"submit\"\n          className={classNames('button is-primary', {\n            'is-loading': loading,\n          })}\n        >\n          {needToRegister ? 'Register' : 'Login'}\n        </button>\n      </div>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport { User } from '../../types';\nimport { AuthForm } from './AuthForm';\n\nexport const AuthContext = React.createContext<User | null>(null);\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const AuthProvider: React.FC<Props> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  if (!user) {\n    return <AuthForm onLogin={setUser} />;\n  }\n\n  return (\n    <AuthContext.Provider value={user}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import { Todo } from '../types/Todo';\nimport { Filter } from '../types/Filter';\n\nexport const filterTodos = (\n  todos: Todo[],\n  filterParam: Filter,\n) => {\n  const visibleTodos = [...todos];\n\n  switch (filterParam) {\n    case Filter.Active:\n      return visibleTodos.filter(todo => !todo.completed);\n    case Filter.Completed:\n      return visibleTodos.filter(todo => todo.completed);\n    case Filter.All:\n      return visibleTodos;\n    default:\n      return visibleTodos;\n  }\n};\n\nexport const countActiveTodos = (todos: Todo[]): number => {\n  const activeTodos = todos.filter(todo => !todo.completed);\n\n  return activeTodos.length;\n};\n\nexport const checkCompletedTodos = (todos: Todo[]): boolean => {\n  return todos.some(todo => todo.completed);\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { countActiveTodos } from '../../utils';\n\ntype Props = {\n  addTodo: (value: string) => void,\n  tempTodo: Todo | null,\n  toggleCompletedStatus: () => void,\n  todos: Todo[],\n};\n\nexport const Header: React.FC<Props> = ({\n  addTodo,\n  tempTodo,\n  toggleCompletedStatus,\n  todos,\n}) => {\n  const [value, setValue] = useState('');\n  const changeValue = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  };\n\n  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    addTodo(value);\n    setValue('');\n  };\n\n  return (\n    <header className=\"todoapp__header\">\n      <button\n        type=\"button\"\n        className={classNames(\n          'todoapp__toggle-all',\n          { active: !countActiveTodos(todos) },\n        )}\n        onClick={toggleCompletedStatus}\n      />\n      <form onSubmit={onSubmit}>\n        <input\n          disabled={!!tempTodo}\n          name=\"title\"\n          value={value}\n          onChange={changeValue}\n          type=\"text\"\n          className=\"todoapp__new-todo\"\n          placeholder=\"What needs to be done?\"\n        />\n      </form>\n    </header>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { Todo, Property, KeyType } from '../../types';\n\ntype Props = {\n  todo: Todo,\n  removeTodo: (id: number) => void,\n  removedTodoId: number | null,\n  updateTodo: (id: number, data: Property) => void,\n  isLoadingAll: boolean,\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  removeTodo,\n  removedTodoId,\n  updateTodo,\n  isLoadingAll,\n}) => {\n  const { id, title, completed } = todo;\n  const [placeHolder, setPlaceHolder] = useState(title);\n  const [value, setValue] = useState('');\n  const [isReadOnly, setIsReadOnly] = useState(true);\n  let isEscape = false;\n  const isChanged = placeHolder !== value;\n\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  };\n\n  const looseFocus = (\n    event: React.KeyboardEvent<HTMLInputElement>\n    | React.FocusEvent<HTMLInputElement>,\n  ) => {\n    setIsReadOnly(true);\n    setValue('');\n    event.currentTarget.blur();\n  };\n\n  const setFocus = (event: React.MouseEvent<HTMLInputElement>) => {\n    setIsReadOnly(false);\n    setValue(placeHolder);\n    event.currentTarget.focus();\n  };\n\n  const changeTitle = (\n    event: React.FocusEvent<HTMLInputElement>\n    | React.KeyboardEvent<HTMLInputElement>,\n  ) => {\n    updateTodo(id, { title: event.currentTarget.value });\n    setPlaceHolder(event.currentTarget.value);\n    looseFocus(event);\n  };\n\n  const onDoubleClick = (event: React.MouseEvent<HTMLInputElement>) => {\n    setFocus(event);\n  };\n\n  const onBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n    if (isEscape) {\n      looseFocus(event);\n\n      return;\n    }\n\n    if (!value) {\n      removeTodo(id);\n\n      return;\n    }\n\n    if (!isChanged) {\n      looseFocus(event);\n\n      return;\n    }\n\n    if (isChanged) {\n      changeTitle(event);\n    }\n  };\n\n  const onKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === KeyType.Enter && !value) {\n      removeTodo(id);\n    }\n\n    if (event.key === KeyType.Enter && !isChanged && value) {\n      looseFocus(event);\n    }\n\n    if (event.key === KeyType.Enter && isChanged && value) {\n      changeTitle(event);\n    }\n\n    if (event.key === KeyType.Escape) {\n      isEscape = true;\n      event.currentTarget.blur();\n      isEscape = false;\n    }\n  };\n\n  return (\n    <li\n      className={classNames(\n        'todo',\n        { completed },\n      )}\n    >\n      <label className=\"todo__status-label\">\n        <input\n          type=\"checkbox\"\n          className=\"todo__status\"\n          checked={completed}\n          onChange={() => {\n            updateTodo(id, { completed: !completed });\n          }}\n        />\n      </label>\n      <input\n        type=\"text\"\n        placeholder={placeHolder}\n        value={value}\n        onChange={onChange}\n        onDoubleClick={onDoubleClick}\n        className={classNames(\n          'todo__title',\n          { 'todo__title-transparent': !isReadOnly },\n        )}\n        readOnly={isReadOnly}\n        onKeyDown={onKeyDown}\n        onBlur={onBlur}\n      />\n      <button\n        type=\"button\"\n        className=\"todo__remove\"\n        onClick={() => removeTodo(id)}\n        hidden={!isReadOnly}\n      >\n        ×\n      </button>\n\n      {(removedTodoId === id || isLoadingAll) && (\n        <div className=\"overlay\">\n          <div className=\"modal-background has-background-white-ter\" />\n          <div className=\"loader\" />\n        </div>\n      )}\n    </li>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React from 'react';\nimport { Todo, Property } from '../../types';\nimport { TodoItem } from '../TodoItem/TodoItem';\n\ntype Props = {\n  todos: Todo[],\n  tempTodo: Todo | null,\n  removeTodo: (id: number) => void,\n  removedTodoId: number | null,\n  updateTodo: (id: number, data: Property) => void,\n  isLoadingAll: boolean,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  tempTodo,\n  removeTodo,\n  removedTodoId,\n  updateTodo,\n  isLoadingAll,\n}) => (\n  <ul className=\"todoapp__main\">\n    {todos.map(todo => (\n      <TodoItem\n        key={todo.id}\n        todo={todo}\n        removeTodo={removeTodo}\n        removedTodoId={removedTodoId}\n        updateTodo={updateTodo}\n        isLoadingAll={isLoadingAll}\n      />\n    ))}\n    {tempTodo && (\n      <div className=\"todo\">\n        <label className=\"todo__status-label\">\n          <input type=\"checkbox\" className=\"todo__status\" />\n        </label>\n        <input\n          defaultValue={tempTodo.title}\n          className=\"todo__title\"\n          disabled\n        />\n        <button type=\"button\" className=\"todo__remove\">×</button>\n\n        <div className=\"overlay\">\n          <div className=\"modal-background has-background-white-ter\" />\n          <div className=\"loader\" />\n        </div>\n      </div>\n    )}\n  </ul>\n);\n","import { Property } from '../types/Property';\nimport { Todo } from '../types/Todo';\nimport { client } from '../utils';\n\nexport const USER_ID = 6657;\nexport const links = ['All', 'Active', 'Completed'];\n\nexport const getTodos = (userId: number) => {\n  return client.get<Todo[]>(`/todos?userId=${userId}`);\n};\n\nexport const postTodo = (userId: number, todo: Omit<Todo, 'id'>)\n: Promise<Todo> => {\n  return client.post(`/todos?userId=${userId}`, todo);\n};\n\nexport const deleteTodo = (todoId: number) => {\n  return client.delete(`/todos/${todoId}`);\n};\n\nexport const patchTodo = (\n  todoId: number,\n  data: Property,\n): Promise<Todo> => {\n  return client.patch(`/todos/${todoId}`, data);\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Todo, Filter, FilterValue } from '../../types';\nimport { links } from '../../api/todos';\nimport { countActiveTodos, checkCompletedTodos } from '../../utils';\n\ntype Props = {\n  todos: Todo[],\n  filter: Filter,\n  setFilter: (filterType: Filter) => void,\n  removeCompletedTodos: () => void,\n};\n\nexport const Footer: React.FC<Props> = ({\n  todos,\n  setFilter,\n  filter,\n  removeCompletedTodos,\n}) => {\n  const changeFilter = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    const filterType = event.currentTarget.textContent as FilterValue;\n\n    if (filterType) {\n      setFilter(Filter[filterType]);\n    }\n  };\n\n  return (\n    <footer className=\"todoapp__footer\">\n      <span className=\"todo-count\">\n        {`${countActiveTodos(todos)} items left`}\n      </span>\n\n      <nav className=\"filter\">\n        {links.map(link => (\n          <Link\n            key={link}\n            to={link === 'All' ? '../' : `../${link.toLowerCase()}`}\n            className={classNames(\n              'filter__link',\n              {\n                selected: link === filter,\n              },\n            )}\n            onClick={changeFilter}\n          >\n            {link}\n          </Link>\n        ))}\n      </nav>\n\n      <button\n        type=\"button\"\n        className={classNames(\n          'todoapp__clear-completed',\n          { 'todoapp__clear-completed-disabled': !checkCompletedTodos(todos) },\n        )}\n        onClick={removeCompletedTodos}\n      >\n        Clear completed\n      </button>\n\n    </footer>\n  );\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { ErrorType, Error } from '../../types';\n\ntype Props = {\n  setError: (error: Error) => void,\n  errorText: string,\n};\n\nexport const TodoNotification: React.FC<Props> = ({ setError, errorText }) => {\n  const [isVisible, setIsVisible] = useState(true);\n\n  const deleteNotifacation = () => {\n    setIsVisible(false);\n    setTimeout(() => {\n      setError({\n        state: false,\n        type: ErrorType.None,\n      });\n    }, 1000);\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      deleteNotifacation();\n    }, 3000);\n  }, []);\n\n  return (\n    <div\n      className={classNames(\n        'notification',\n        'is-danger',\n        'is-light',\n        'has-text-weight-normal',\n        { hidden: !isVisible },\n      )}\n    >\n      <button\n        type=\"button\"\n        className=\"delete\"\n        onClick={deleteNotifacation}\n      />\n      {errorText}\n    </div>\n  );\n};\n","/* eslint-disable object-curly-newline */\n/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { useEffect, useState, useMemo, useContext } from 'react';\nimport { Header } from './components/Header';\nimport { AuthContext } from './components/Auth/AuthContext';\nimport { TodoList } from './components/TodoList';\nimport { Footer } from './components/Footer';\nimport { TodoNotification } from './components/TodoNotification';\nimport { getTodos, postTodo, deleteTodo, patchTodo } from './api/todos';\nimport { filterTodos } from './utils';\nimport { Error, Filter, Todo, ErrorType, Property } from './types';\n\nconst initialError: Error = {\n  state: false,\n  type: ErrorType.None,\n};\n\nexport const App: React.FC = () => {\n  const user = useContext(AuthContext);\n  const newUserId = user?.id || 0;\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [tempTodo, setTempTodo] = useState<Todo | null>(null);\n  const [filterType, setFilterType] = useState(Filter.All);\n  const [error, setError] = useState(initialError);\n  const [removedTodoId, setRemovedTodoId] = useState<number | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const initialStatus = todos.every(todo => todo.completed);\n  const [completedStatus, setCompletedStatus] = useState(initialStatus);\n  const filteredTodos = useMemo(() => {\n    return filterTodos(todos, filterType);\n  }, [todos, filterType]);\n  // }\n\n  useEffect(() => {\n    try {\n      const serverTodos = async () => {\n        const response = await getTodos(newUserId);\n\n        return response;\n      };\n\n      serverTodos()\n        .then(response => setTodos(response));\n    } catch {\n      setError({\n        state: true,\n        type: ErrorType.Update,\n      });\n    }\n    // }\n  }, []);\n\n  const addTodo = (title: string) => {\n    if (!title) {\n      setError({\n        state: true,\n        type: ErrorType.EmptyTitle,\n      });\n\n      return;\n    }\n\n    setTempTodo({\n      id: 0,\n      userId: newUserId,\n      title,\n      completed: false,\n    });\n\n    postTodo(newUserId, {\n      userId: newUserId,\n      title,\n      completed: false,\n    }).then(response => {\n      setTodos(prev => (\n        [\n          ...prev,\n          response,\n        ]\n      ));\n    })\n      .finally(() => {\n        setTempTodo(null);\n      });\n  };\n\n  const removeTodo = (id: number) => {\n    setRemovedTodoId(id);\n    deleteTodo(id)\n      .then(() => {\n        setTodos(todos.filter(currentTodo => currentTodo.id !== id));\n      })\n      .catch(() => {\n        setError({\n          state: true,\n          type: ErrorType.Delete,\n        });\n      })\n      .finally(() => {\n        setRemovedTodoId(null);\n      });\n  };\n\n  const updateTodo = (id: number, data: Property) => {\n    setRemovedTodoId(id);\n    patchTodo(id, data)\n      .then((response) => {\n        const updatedTodos = [...todos];\n        const changedTodoId = [...todos].findIndex(todo => todo.id === id);\n\n        updatedTodos[changedTodoId] = response;\n        setTodos(updatedTodos);\n      })\n      .catch(() => {\n        setError({\n          state: true,\n          type: ErrorType.Update,\n        });\n      })\n      .finally(() => {\n        setRemovedTodoId(null);\n      });\n  };\n\n  const toggleCompletedStatus = () => {\n    setIsLoading(true);\n    setCompletedStatus(prev => !prev);\n\n    const updatedPromises = todos.map(todo => {\n      return patchTodo(todo.id, { completed: completedStatus });\n    });\n\n    Promise.all(updatedPromises)\n      .then(setTodos)\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const removeCompletedTodos = () => {\n    const completed = todos.filter(todo => todo.completed);\n    const uncompleted = todos.filter(todo => !todo.completed);\n    const removePromises = completed.map(todo => deleteTodo(todo.id));\n\n    Promise.all(removePromises)\n      .then(() => setTodos(uncompleted))\n      .catch(() => {\n        setError({\n          state: true,\n          type: ErrorType.Delete,\n        });\n      });\n  };\n\n  if (!user?.id) {\n    return <p>Please login</p>;\n  }\n\n  return (\n    <div className=\"todoapp\">\n      <h1 className=\"todoapp__title\">todos</h1>\n\n      <div className=\"todoapp__content\">\n        <Header\n          todos={todos}\n          addTodo={addTodo}\n          tempTodo={tempTodo}\n          toggleCompletedStatus={toggleCompletedStatus}\n        />\n\n        {todos.length > 0 && (\n          <>\n            <TodoList\n              todos={filteredTodos}\n              tempTodo={tempTodo}\n              removeTodo={removeTodo}\n              removedTodoId={removedTodoId}\n              updateTodo={updateTodo}\n              isLoadingAll={isLoading}\n            />\n            <Footer\n              todos={todos}\n              setFilter={setFilterType}\n              filter={filterType}\n              removeCompletedTodos={removeCompletedTodos}\n            />\n          </>\n        )}\n      </div>\n\n      {error.state && (\n        <TodoNotification\n          setError={setError}\n          errorText={error.type}\n        />\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { AuthProvider } from './components/Auth/AuthContext';\n\nimport 'bulma/css/bulma.css';\nimport './styles/index.scss';\nimport './styles/todoapp.scss';\nimport './styles/filter.scss';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <AuthProvider>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </AuthProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}