{"version":3,"sources":["types/index.ts","types/Filter.ts","types/ErrorType.ts","types/KeyType.ts","utils/fetchClient.ts","utils/filterTodos.ts","components/Header/Header.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","api/todos.ts","components/Footer/Footer.tsx","components/TodoNotification/TodoNotifictiion.tsx","App.tsx","index.tsx"],"names":["Filter","ErrorType","KeyType","BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","data","options","body","JSON","stringify","headers","then","fetch","response","ok","Error","json","client","countActiveTodos","todos","filter","todo","completed","length","checkCompletedTodos","some","Header","addTodo","tempTodo","toggleCompletedStatus","useState","value","setValue","className","type","classNames","active","onClick","onSubmit","event","preventDefault","disabled","name","onChange","target","placeholder","TodoItem","removeTodo","removedTodoId","updateTodo","isLoadingAll","id","title","placeHolder","setPlaceHolder","isReadOnly","setIsReadOnly","isEscape","isChanged","looseFocus","currentTarget","blur","changeTitle","checked","onDoubleClick","focus","setFocus","readOnly","onKeyDown","key","Enter","Escape","onBlur","hidden","TodoList","map","defaultValue","links","deleteTodo","todoId","patchTodo","Footer","setFilter","removeCompletedTodos","changeFilter","filterType","textContent","link","to","toLowerCase","selected","TodoNotification","setError","errorText","isVisible","setIsVisible","deleteNotifacation","state","None","useEffect","initialError","USER_ID","localTodos","parse","localStorage","getItem","App","setTodos","setTempTodo","All","setFilterType","error","setRemovedTodoId","isLoading","setIsLoading","initialStatus","every","completedStatus","setCompletedStatus","filteredTodos","useMemo","filterParam","visibleTodos","Active","Completed","filterTodos","a","serverTodos","Update","setItem","userId","prev","finally","EmptyTitle","updatedPromises","all","currentTodo","catch","Delete","updatedTodos","findIndex","uncompleted","removePromises","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f469fed6.chunk.js","sourcesContent":["export * from './Error';\nexport * from './ErrorType';\nexport * from './Filter';\nexport * from './Todo';\nexport * from './FilterValue';\nexport * from './Property';\nexport * from './KeyType';\n","// eslint-disable-next-line no-shadow\nexport enum Filter {\n  All = 'All',\n  Completed = 'Completed',\n  Active = 'Active',\n}\n","// eslint-disable-next-line no-shadow\nexport enum ErrorType {\n  EmptyTitle = 'Title can\\'t be empty',\n  Delete = 'Unable to delete a todo',\n  Add = 'Unable to add a todo',\n  Update = 'Unable to update a todo',\n  None = 'None',\n}\n","// eslint-disable-next-line no-shadow\nexport enum KeyType {\n  Enter = 'Enter',\n  Escape = 'Escape',\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nconst BASE_URL = 'https://mate.academy/students-api';\n\n// returns a promise resolved after a given delay\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\n// To have autocompletion and avoid mistypes\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null, // we can send any data to the server\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    // We add body and Content-Type only for the requests with data\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  // we wait for testing purpose to see loaders\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","import { Todo } from '../types/Todo';\nimport { Filter } from '../types/Filter';\n\nexport const filterTodos = (\n  todos: Todo[],\n  filterParam: Filter,\n) => {\n  const visibleTodos = [...todos];\n\n  switch (filterParam) {\n    case Filter.Active:\n      return visibleTodos.filter(todo => !todo.completed);\n    case Filter.Completed:\n      return visibleTodos.filter(todo => todo.completed);\n    case Filter.All:\n      return visibleTodos;\n    default:\n      return visibleTodos;\n  }\n};\n\nexport const countActiveTodos = (todos: Todo[]): number => {\n  const activeTodos = todos.filter(todo => !todo.completed);\n\n  return activeTodos.length;\n};\n\nexport const checkCompletedTodos = (todos: Todo[]): boolean => {\n  return todos.some(todo => todo.completed);\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { countActiveTodos } from '../../utils';\n\ntype Props = {\n  addTodo: (value: string) => void,\n  tempTodo: Todo | null,\n  toggleCompletedStatus: () => void,\n  todos: Todo[],\n};\n\nexport const Header: React.FC<Props> = ({\n  addTodo,\n  tempTodo,\n  toggleCompletedStatus,\n  todos,\n}) => {\n  const [value, setValue] = useState('');\n  const changeValue = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  };\n\n  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    addTodo(value);\n    setValue('');\n  };\n\n  return (\n    <header className=\"todoapp__header\">\n      <button\n        type=\"button\"\n        className={classNames(\n          'todoapp__toggle-all',\n          { active: !countActiveTodos(todos) },\n        )}\n        onClick={toggleCompletedStatus}\n      />\n      <form onSubmit={onSubmit}>\n        <input\n          disabled={!!tempTodo}\n          name=\"title\"\n          value={value}\n          onChange={changeValue}\n          type=\"text\"\n          className=\"todoapp__new-todo\"\n          placeholder=\"What needs to be done?\"\n        />\n      </form>\n    </header>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { Todo, Property, KeyType } from '../../types';\n\ntype Props = {\n  todo: Todo,\n  removeTodo: (id: number) => void,\n  removedTodoId: number | null,\n  updateTodo: (id: number, data: Property) => void,\n  isLoadingAll: boolean,\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  removeTodo,\n  removedTodoId,\n  updateTodo,\n  isLoadingAll,\n}) => {\n  const { id, title, completed } = todo;\n  const [placeHolder, setPlaceHolder] = useState(title);\n  const [value, setValue] = useState('');\n  const [isReadOnly, setIsReadOnly] = useState(true);\n  let isEscape = false;\n  const isChanged = placeHolder !== value;\n\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  };\n\n  const looseFocus = (\n    event: React.KeyboardEvent<HTMLInputElement>\n    | React.FocusEvent<HTMLInputElement>,\n  ) => {\n    setIsReadOnly(true);\n    setValue('');\n    event.currentTarget.blur();\n  };\n\n  const setFocus = (event: React.MouseEvent<HTMLInputElement>) => {\n    setIsReadOnly(false);\n    setValue(placeHolder);\n    event.currentTarget.focus();\n  };\n\n  const changeTitle = (\n    event: React.FocusEvent<HTMLInputElement>\n    | React.KeyboardEvent<HTMLInputElement>,\n  ) => {\n    updateTodo(id, { title: event.currentTarget.value });\n    setPlaceHolder(event.currentTarget.value);\n    looseFocus(event);\n  };\n\n  const onDoubleClick = (event: React.MouseEvent<HTMLInputElement>) => {\n    setFocus(event);\n  };\n\n  const onBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n    if (isEscape) {\n      looseFocus(event);\n\n      return;\n    }\n\n    if (!value) {\n      removeTodo(id);\n\n      return;\n    }\n\n    if (!isChanged) {\n      looseFocus(event);\n\n      return;\n    }\n\n    if (isChanged) {\n      changeTitle(event);\n    }\n  };\n\n  const onKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === KeyType.Enter && !value) {\n      removeTodo(id);\n    }\n\n    if (event.key === KeyType.Enter && !isChanged && value) {\n      looseFocus(event);\n    }\n\n    if (event.key === KeyType.Enter && isChanged && value) {\n      changeTitle(event);\n    }\n\n    if (event.key === KeyType.Escape) {\n      isEscape = true;\n      event.currentTarget.blur();\n      isEscape = false;\n    }\n  };\n\n  return (\n    <li\n      className={classNames(\n        'todo',\n        { completed },\n      )}\n    >\n      <label className=\"todo__status-label\">\n        <input\n          type=\"checkbox\"\n          className=\"todo__status\"\n          checked={completed}\n          onChange={() => {\n            updateTodo(id, { completed: !completed });\n          }}\n        />\n      </label>\n      <input\n        type=\"text\"\n        placeholder={placeHolder}\n        value={value}\n        onChange={onChange}\n        onDoubleClick={onDoubleClick}\n        className={classNames(\n          'todo__title',\n          { 'todo__title-transparent': !isReadOnly },\n        )}\n        readOnly={isReadOnly}\n        onKeyDown={onKeyDown}\n        onBlur={onBlur}\n      />\n      <button\n        type=\"button\"\n        className=\"todo__remove\"\n        onClick={() => removeTodo(id)}\n        hidden={!isReadOnly}\n      >\n        ×\n      </button>\n\n      {(removedTodoId === id || isLoadingAll) && (\n        <div className=\"overlay\">\n          <div className=\"modal-background has-background-white-ter\" />\n          <div className=\"loader\" />\n        </div>\n      )}\n    </li>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React from 'react';\nimport { Todo, Property } from '../../types';\nimport { TodoItem } from '../TodoItem/TodoItem';\n\ntype Props = {\n  todos: Todo[],\n  tempTodo: Todo | null,\n  removeTodo: (id: number) => void,\n  removedTodoId: number | null,\n  updateTodo: (id: number, data: Property) => void,\n  isLoadingAll: boolean,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  tempTodo,\n  removeTodo,\n  removedTodoId,\n  updateTodo,\n  isLoadingAll,\n}) => (\n  <ul className=\"todoapp__main\">\n    {todos.map(todo => (\n      <TodoItem\n        key={todo.id}\n        todo={todo}\n        removeTodo={removeTodo}\n        removedTodoId={removedTodoId}\n        updateTodo={updateTodo}\n        isLoadingAll={isLoadingAll}\n      />\n    ))}\n    {tempTodo && (\n      <div className=\"todo\">\n        <label className=\"todo__status-label\">\n          <input type=\"checkbox\" className=\"todo__status\" />\n        </label>\n        <input\n          defaultValue={tempTodo.title}\n          className=\"todo__title\"\n          disabled\n        />\n        <button type=\"button\" className=\"todo__remove\">×</button>\n\n        <div className=\"overlay\">\n          <div className=\"modal-background has-background-white-ter\" />\n          <div className=\"loader\" />\n        </div>\n      </div>\n    )}\n  </ul>\n);\n","import { Property } from '../types/Property';\nimport { Todo } from '../types/Todo';\nimport { client } from '../utils';\n\nexport const USER_ID = 6657;\nexport const links = ['All', 'Active', 'Completed'];\n\nexport const getTodos = (userId: number) => {\n  return client.get<Todo[]>(`/todos?userId=${userId}`);\n};\n\nexport const postTodo = (userId: number, todo: Omit<Todo, 'id'>)\n: Promise<Todo> => {\n  return client.post(`/todos?userId=${userId}`, todo);\n};\n\nexport const deleteTodo = (todoId: number) => {\n  return client.delete(`/todos/${todoId}`);\n};\n\nexport const patchTodo = (\n  todoId: number,\n  data: Property,\n): Promise<Todo> => {\n  return client.patch(`/todos/${todoId}`, data);\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Todo, Filter, FilterValue } from '../../types';\nimport { links } from '../../api/todos';\nimport { countActiveTodos, checkCompletedTodos } from '../../utils';\n\ntype Props = {\n  todos: Todo[],\n  filter: Filter,\n  setFilter: (filterType: Filter) => void,\n  removeCompletedTodos: () => void,\n};\n\nexport const Footer: React.FC<Props> = ({\n  todos,\n  setFilter,\n  filter,\n  removeCompletedTodos,\n}) => {\n  const changeFilter = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    const filterType = event.currentTarget.textContent as FilterValue;\n\n    if (filterType) {\n      setFilter(Filter[filterType]);\n    }\n  };\n\n  return (\n    <footer className=\"todoapp__footer\">\n      <span className=\"todo-count\">\n        {`${countActiveTodos(todos)} items left`}\n      </span>\n\n      <nav className=\"filter\">\n        {links.map(link => (\n          <Link\n            key={link}\n            to={link === 'All' ? '../' : `../${link.toLowerCase()}`}\n            className={classNames(\n              'filter__link',\n              {\n                selected: link === filter,\n              },\n            )}\n            onClick={changeFilter}\n          >\n            {link}\n          </Link>\n        ))}\n      </nav>\n\n      <button\n        type=\"button\"\n        className={classNames(\n          'todoapp__clear-completed',\n          { 'todoapp__clear-completed-disabled': !checkCompletedTodos(todos) },\n        )}\n        onClick={removeCompletedTodos}\n      >\n        Clear completed\n      </button>\n\n    </footer>\n  );\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { ErrorType, Error } from '../../types';\n\ntype Props = {\n  setError: (error: Error) => void,\n  errorText: string,\n};\n\nexport const TodoNotification: React.FC<Props> = ({ setError, errorText }) => {\n  const [isVisible, setIsVisible] = useState(true);\n\n  const deleteNotifacation = () => {\n    setIsVisible(false);\n    setTimeout(() => {\n      setError({\n        state: false,\n        type: ErrorType.None,\n      });\n    }, 1000);\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      deleteNotifacation();\n    }, 3000);\n  }, []);\n\n  return (\n    <div\n      className={classNames(\n        'notification',\n        'is-danger',\n        'is-light',\n        'has-text-weight-normal',\n        { hidden: !isVisible },\n      )}\n    >\n      <button\n        type=\"button\"\n        className=\"delete\"\n        onClick={deleteNotifacation}\n      />\n      {errorText}\n    </div>\n  );\n};\n","/* eslint-disable object-curly-newline */\n/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { useEffect, useState, useMemo } from 'react';\nimport { Header } from './components/Header';\nimport { TodoList } from './components/TodoList';\nimport { Footer } from './components/Footer';\nimport { TodoNotification } from './components/TodoNotification';\nimport { getTodos, postTodo, deleteTodo, patchTodo } from './api/todos';\nimport { filterTodos } from './utils';\nimport { Error, Filter, Todo, ErrorType, Property } from './types';\n\nconst initialError: Error = {\n  state: false,\n  type: ErrorType.None,\n};\n\nconst USER_ID = 6657;\nconst localTodos = JSON.parse(localStorage.getItem('todos') || '[]');\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>(localTodos);\n  const [tempTodo, setTempTodo] = useState<Todo | null>(null);\n  const [filterType, setFilterType] = useState(Filter.All);\n  const [error, setError] = useState(initialError);\n  const [removedTodoId, setRemovedTodoId] = useState<number | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const initialStatus = todos.every(todo => todo.completed);\n  const [completedStatus, setCompletedStatus] = useState(initialStatus);\n  const filteredTodos = useMemo(() => {\n    return filterTodos(todos, filterType);\n  }, [todos, filterType]);\n\n  useEffect(() => {\n    if (!localTodos.length) {\n      try {\n        const serverTodos = async () => {\n          const response = await getTodos(USER_ID);\n\n          return response;\n        };\n\n        serverTodos()\n          .then(response => setTodos(response));\n      } catch {\n        setError({\n          state: true,\n          type: ErrorType.Update,\n        });\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n\n  const addTodo = (title: string) => {\n    if (!title) {\n      setError({\n        state: true,\n        type: ErrorType.EmptyTitle,\n      });\n\n      return;\n    }\n\n    setTempTodo({\n      id: 0,\n      userId: USER_ID,\n      title,\n      completed: false,\n    });\n\n    postTodo(USER_ID, {\n      userId: USER_ID,\n      title,\n      completed: false,\n    }).then(response => {\n      setTodos(prev => (\n        [\n          ...prev,\n          response,\n        ]\n      ));\n    })\n      .finally(() => {\n        setTempTodo(null);\n      });\n  };\n\n  const removeTodo = (id: number) => {\n    setRemovedTodoId(id);\n    deleteTodo(id)\n      .then(() => {\n        setTodos(todos.filter(currentTodo => currentTodo.id !== id));\n      })\n      .catch(() => {\n        setError({\n          state: true,\n          type: ErrorType.Delete,\n        });\n      })\n      .finally(() => {\n        setRemovedTodoId(null);\n      });\n  };\n\n  const updateTodo = (id: number, data: Property) => {\n    setRemovedTodoId(id);\n    patchTodo(id, data)\n      .then((response) => {\n        const updatedTodos = [...todos];\n        const changedTodoId = [...todos].findIndex(todo => todo.id === id);\n\n        updatedTodos[changedTodoId] = response;\n        setTodos(updatedTodos);\n      })\n      .catch(() => {\n        setError({\n          state: true,\n          type: ErrorType.Update,\n        });\n      })\n      .finally(() => {\n        setRemovedTodoId(null);\n      });\n  };\n\n  const toggleCompletedStatus = () => {\n    setIsLoading(true);\n    setCompletedStatus(prev => !prev);\n\n    const updatedPromises = todos.map(todo => {\n      return patchTodo(todo.id, { completed: completedStatus });\n    });\n\n    Promise.all(updatedPromises)\n      .then(setTodos)\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const removeCompletedTodos = () => {\n    const completed = todos.filter(todo => todo.completed);\n    const uncompleted = todos.filter(todo => !todo.completed);\n    const removePromises = completed.map(todo => deleteTodo(todo.id));\n\n    Promise.all(removePromises)\n      .then(() => setTodos(uncompleted))\n      .catch(() => {\n        setError({\n          state: true,\n          type: ErrorType.Delete,\n        });\n      });\n  };\n\n  return (\n    <div className=\"todoapp\">\n      <h1 className=\"todoapp__title\">todos</h1>\n\n      <div className=\"todoapp__content\">\n        <Header\n          todos={todos}\n          addTodo={addTodo}\n          tempTodo={tempTodo}\n          toggleCompletedStatus={toggleCompletedStatus}\n        />\n\n        {todos.length > 0 && (\n          <>\n            <TodoList\n              todos={filteredTodos}\n              tempTodo={tempTodo}\n              removeTodo={removeTodo}\n              removedTodoId={removedTodoId}\n              updateTodo={updateTodo}\n              isLoadingAll={isLoading}\n            />\n            <Footer\n              todos={todos}\n              setFilter={setFilterType}\n              filter={filterType}\n              removeCompletedTodos={removeCompletedTodos}\n            />\n          </>\n        )}\n      </div>\n\n      {error.state && (\n        <TodoNotification\n          setError={setError}\n          errorText={error.type}\n        />\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport './styles/index.scss';\nimport './styles/todoapp.scss';\nimport './styles/filter.scss';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}